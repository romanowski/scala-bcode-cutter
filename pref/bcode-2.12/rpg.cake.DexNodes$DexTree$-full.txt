Classfile /home/krzysiek/workspace/scala-bcode-cutter/pref/target/scala-2.12/classes/rpg/cake/DexNodes$DexTree$.class
  Last modified Apr 8, 2018; size 2031 bytes
  MD5 checksum 93740c3bfba44729a3ddf7edf5107f0f
  Compiled from "CakeSkillTrees.scala"
public class rpg.cake.DexNodes$DexTree$ extends scala.runtime.AbstractFunction2<rpg.cake.Nodes$Node, rpg.cake.Nodes$Node, rpg.cake.DexNodes$DexTree> implements scala.Serializable
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
   #1 = Utf8               rpg/cake/DexNodes$DexTree$
   #2 = Class              #1             // rpg/cake/DexNodes$DexTree$
   #3 = Utf8               Lscala/runtime/AbstractFunction2<Lrpg/cake/Nodes$Node;Lrpg/cake/Nodes$Node;Lrpg/cake/DexNodes$DexTree;>;Lscala/Serializable;
   #4 = Utf8               scala/runtime/AbstractFunction2
   #5 = Class              #4             // scala/runtime/AbstractFunction2
   #6 = Utf8               scala/Serializable
   #7 = Class              #6             // scala/Serializable
   #8 = Utf8               CakeSkillTrees.scala
   #9 = Utf8               rpg/cake/DexNodes$DexTree
  #10 = Class              #9             // rpg/cake/DexNodes$DexTree
  #11 = Utf8               rpg/cake/DexNodes
  #12 = Class              #11            // rpg/cake/DexNodes
  #13 = Utf8               DexTree
  #14 = Utf8               DexTree$
  #15 = Utf8               rpg/cake/Nodes$Node
  #16 = Class              #15            // rpg/cake/Nodes$Node
  #17 = Utf8               rpg/cake/Nodes
  #18 = Class              #17            // rpg/cake/Nodes
  #19 = Utf8               Node
  #20 = Utf8               $outer
  #21 = Utf8               Lrpg/cake/Nodes;
  #22 = Utf8               toString
  #23 = Utf8               ()Ljava/lang/String;
  #24 = String             #13            // DexTree
  #25 = Utf8               this
  #26 = Utf8               Lrpg/cake/DexNodes$DexTree$;
  #27 = Utf8               apply
  #28 = Utf8               (Lrpg/cake/Nodes$Node;Lrpg/cake/Nodes$Node;)Lrpg/cake/DexNodes$DexTree;
  #29 = Utf8               left
  #30 = Utf8               right
  #31 = NameAndType        #20:#21        // $outer:Lrpg/cake/Nodes;
  #32 = Fieldref           #2.#31         // rpg/cake/DexNodes$DexTree$.$outer:Lrpg/cake/Nodes;
  #33 = Utf8               <init>
  #34 = Utf8               (Lrpg/cake/Nodes;Lrpg/cake/Nodes$Node;Lrpg/cake/Nodes$Node;)V
  #35 = NameAndType        #33:#34        // "<init>":(Lrpg/cake/Nodes;Lrpg/cake/Nodes$Node;Lrpg/cake/Nodes$Node;)V
  #36 = Methodref          #10.#35        // rpg/cake/DexNodes$DexTree."<init>":(Lrpg/cake/Nodes;Lrpg/cake/Nodes$Node;Lrpg/cake/Nodes$Node;)V
  #37 = Utf8               Lrpg/cake/Nodes$Node;
  #38 = Utf8               unapply
  #39 = Utf8               (Lrpg/cake/DexNodes$DexTree;)Lscala/Option;
  #40 = Utf8               x$0
  #41 = Utf8               scala/None$
  #42 = Class              #41            // scala/None$
  #43 = Utf8               MODULE$
  #44 = Utf8               Lscala/None$;
  #45 = NameAndType        #43:#44        // MODULE$:Lscala/None$;
  #46 = Fieldref           #42.#45        // scala/None$.MODULE$:Lscala/None$;
  #47 = Utf8               scala/Some
  #48 = Class              #47            // scala/Some
  #49 = Utf8               scala/Tuple2
  #50 = Class              #49            // scala/Tuple2
  #51 = Utf8               ()Lrpg/cake/Nodes$Node;
  #52 = NameAndType        #29:#51        // left:()Lrpg/cake/Nodes$Node;
  #53 = Methodref          #10.#52        // rpg/cake/DexNodes$DexTree.left:()Lrpg/cake/Nodes$Node;
  #54 = NameAndType        #30:#51        // right:()Lrpg/cake/Nodes$Node;
  #55 = Methodref          #10.#54        // rpg/cake/DexNodes$DexTree.right:()Lrpg/cake/Nodes$Node;
  #56 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #57 = NameAndType        #33:#56        // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #58 = Methodref          #50.#57        // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #59 = Utf8               (Ljava/lang/Object;)V
  #60 = NameAndType        #33:#59        // "<init>":(Ljava/lang/Object;)V
  #61 = Methodref          #48.#60        // scala/Some."<init>":(Ljava/lang/Object;)V
  #62 = Utf8               Lrpg/cake/DexNodes$DexTree;
  #63 = Utf8               scala/Option
  #64 = Class              #63            // scala/Option
  #65 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #66 = Utf8               v1
  #67 = Utf8               v2
  #68 = NameAndType        #27:#28        // apply:(Lrpg/cake/Nodes$Node;Lrpg/cake/Nodes$Node;)Lrpg/cake/DexNodes$DexTree;
  #69 = Methodref          #2.#68         // rpg/cake/DexNodes$DexTree$.apply:(Lrpg/cake/Nodes$Node;Lrpg/cake/Nodes$Node;)Lrpg/cake/DexNodes$DexTree;
  #70 = Utf8               Ljava/lang/Object;
  #71 = Utf8               (Lrpg/cake/Nodes;)V
  #72 = Utf8               ()V
  #73 = NameAndType        #33:#72        // "<init>":()V
  #74 = Methodref          #5.#73         // scala/runtime/AbstractFunction2."<init>":()V
  #75 = Utf8               Code
  #76 = Utf8               LocalVariableTable
  #77 = Utf8               LineNumberTable
  #78 = Utf8               MethodParameters
  #79 = Utf8               StackMapTable
  #80 = Utf8               Signature
  #81 = Utf8               (Lrpg/cake/DexNodes$DexTree;)Lscala/Option<Lscala/Tuple2<Lrpg/cake/Nodes$Node;Lrpg/cake/Nodes$Node;>;>;
  #82 = Utf8               SourceFile
  #83 = Utf8               InnerClasses
  #84 = Utf8               ScalaInlineInfo
  #85 = Utf8               Scala
{
  private final rpg.cake.Nodes $outer;
    descriptor: Lrpg/cake/Nodes;
    flags: ACC_PRIVATE, ACC_FINAL, ACC_SYNTHETIC

  public final java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #24                 // String DexTree
         2: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lrpg/cake/DexNodes$DexTree$;
      LineNumberTable:
        line 16: 0

  public rpg.cake.DexNodes$DexTree apply(rpg.cake.Nodes$Node, rpg.cake.Nodes$Node);
    descriptor: (Lrpg/cake/Nodes$Node;Lrpg/cake/Nodes$Node;)Lrpg/cake/DexNodes$DexTree;
    flags: ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=3
         0: new           #10                 // class rpg/cake/DexNodes$DexTree
         3: dup
         4: aload_0
         5: getfield      #32                 // Field $outer:Lrpg/cake/Nodes;
         8: aload_1
         9: aload_2
        10: invokespecial #36                 // Method rpg/cake/DexNodes$DexTree."<init>":(Lrpg/cake/Nodes;Lrpg/cake/Nodes$Node;Lrpg/cake/Nodes$Node;)V
        13: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lrpg/cake/DexNodes$DexTree$;
            0      14     1  left   Lrpg/cake/Nodes$Node;
            0      14     2 right   Lrpg/cake/Nodes$Node;
      LineNumberTable:
        line 16: 0
    MethodParameters:
      Name                           Flags
      left                           final
      right                          final

  public scala.Option<scala.Tuple2<rpg.cake.Nodes$Node, rpg.cake.Nodes$Node>> unapply(rpg.cake.DexNodes$DexTree);
    descriptor: (Lrpg/cake/DexNodes$DexTree;)Lscala/Option;
    flags: ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=2
         0: aload_1
         1: ifnonnull     10
         4: getstatic     #46                 // Field scala/None$.MODULE$:Lscala/None$;
         7: goto          32
        10: new           #48                 // class scala/Some
        13: dup
        14: new           #50                 // class scala/Tuple2
        17: dup
        18: aload_1
        19: invokevirtual #53                 // Method rpg/cake/DexNodes$DexTree.left:()Lrpg/cake/Nodes$Node;
        22: aload_1
        23: invokevirtual #55                 // Method rpg/cake/DexNodes$DexTree.right:()Lrpg/cake/Nodes$Node;
        26: invokespecial #58                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        29: invokespecial #61                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        32: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      33     0  this   Lrpg/cake/DexNodes$DexTree$;
            0      33     1   x$0   Lrpg/cake/DexNodes$DexTree;
      LineNumberTable:
        line 16: 0
      StackMapTable: number_of_entries = 2
        frame_type = 10 /* same */
        frame_type = 85 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
    Signature: #81                          // (Lrpg/cake/DexNodes$DexTree;)Lscala/Option<Lscala/Tuple2<Lrpg/cake/Nodes$Node;Lrpg/cake/Nodes$Node;>;>;
    MethodParameters:
      Name                           Flags
      x$0                            final

  public java.lang.Object apply(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: checkcast     #16                 // class rpg/cake/Nodes$Node
         5: aload_2
         6: checkcast     #16                 // class rpg/cake/Nodes$Node
         9: invokevirtual #69                 // Method apply:(Lrpg/cake/Nodes$Node;Lrpg/cake/Nodes$Node;)Lrpg/cake/DexNodes$DexTree;
        12: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lrpg/cake/DexNodes$DexTree$;
            0      13     1    v1   Ljava/lang/Object;
            0      13     2    v2   Ljava/lang/Object;
      LineNumberTable:
        line 16: 0
    MethodParameters:
      Name                           Flags
      v1                             final
      v2                             final

  public rpg.cake.DexNodes$DexTree$(rpg.cake.Nodes);
    descriptor: (Lrpg/cake/Nodes;)V
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: athrow
         6: aload_0
         7: aload_1
         8: putfield      #32                 // Field $outer:Lrpg/cake/Nodes;
        11: aload_0
        12: invokespecial #74                 // Method scala/runtime/AbstractFunction2."<init>":()V
        15: return
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lrpg/cake/DexNodes$DexTree$;
            0      16     1 $outer   Lrpg/cake/Nodes;
      LineNumberTable:
        line 16: 0
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
    MethodParameters:
      Name                           Flags
      $outer                         final
}
Signature: #3                           // Lscala/runtime/AbstractFunction2<Lrpg/cake/Nodes$Node;Lrpg/cake/Nodes$Node;Lrpg/cake/DexNodes$DexTree;>;Lscala/Serializable;
SourceFile: "CakeSkillTrees.scala"
InnerClasses:
     public #13= #10 of #12; //DexTree=class rpg/cake/DexNodes$DexTree of class rpg/cake/DexNodes
     public #14= #2 of #12; //DexTree$=class rpg/cake/DexNodes$DexTree$ of class rpg/cake/DexNodes
     public #19= #16 of #18; //Node=class rpg/cake/Nodes$Node of class rpg/cake/Nodes
Error: unknown attribute
  ScalaInlineInfo: length = 0x1D
   01 01 00 05 00 21 00 47 01 00 1B 00 41 01 00 1B
   00 1C 01 00 16 00 17 01 00 26 00 27 01
Error: unknown attribute
  Scala: length = 0x0

