Classfile /home/krzysiek/workspace/scala-bcode-cutter/pref/target/scala-2.12/classes/rpg/patmat/WisStep.class
  Last modified Apr 8, 2018; size 4286 bytes
  MD5 checksum 6199c24b660f0779cff8eda3cf989bb4
  Compiled from "PatMatSkillTrees.scala"
public class rpg.patmat.WisStep implements rpg.patmat.Node,scala.Product,scala.Serializable
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
    #1 = Utf8               rpg/patmat/WisStep
    #2 = Class              #1            // rpg/patmat/WisStep
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               rpg/patmat/Node
    #6 = Class              #5            // rpg/patmat/Node
    #7 = Utf8               scala/Product
    #8 = Class              #7            // scala/Product
    #9 = Utf8               scala/Serializable
   #10 = Class              #9            // scala/Serializable
   #11 = Utf8               PatMatSkillTrees.scala
   #12 = Utf8               Lscala/reflect/ScalaSignature;
   #13 = Utf8               bytes
   #14 = Utf8               5aBqaV5t'R,O\t1/;nCRT!BeB<7A\n!q!#\t1iA)1oY1mC&QB:L(+4=R\"\nE!(pI\"!C\n\nQQ!a)s_,8\r\tYI!aM+'/[1mSj'\r\3\te!Q3Ai\t!^89AIADi>\"\tyAj]&$h!CAq3u\rAG\t\t\"%w]=*bB\r#!\rAO\t\n\")9w]=%I4-7uIE*!)Za\tYEj!]=\n\"8dQ7.3ARAC1o]>$\r^5p]&!'k:.Z2lK4M]5b],b%\t%NaJ|G-^2u!J,g-=Y\"aaR!!\t1gnw!!.<b\tiHTiJLgn\t\t\"A1(o3vGR%/;z+\tCAC\t%BAJ]RDq!a)qe>$Wo;FYlWM;SCAI\tI%BAB]fDqa#)AyIEBq!c*Aqe>$Wo;Ji\r^8s+yc)T6\tKSQ1m7mK$n8\nQ&C%uKJGo:\tY!C/A1-8FcVGY7B\"W5*qAQ8pYgCL+\tA$\tu!C!=A.Y:i>$W\rFB!!AB^8TiJLgnm!91\rAA\n\"AB3rkd7YK\"91JYA9uaB4E\t[/&8^3q!\tyNB\t6%\Wm_:S\"A79Ta:v]RLW.Za6#2tiJ7\r$v]$n82q\"s)Ab1j%)%k&\t\"!w\t7z)\tsCiaCzSI>Ut\r9msR1P \tqtBA?y^5p]\"9q_Aa=%a!I1A5%QAeGMU3t_24X\rAq'!\n-HPE*,7\r
   #15 = Utf8               to
   #16 = Utf8               Lrpg/patmat/Node;
   #17 = Utf8               unapply
   #18 = Utf8               (Lrpg/patmat/WisStep;)Lscala/Option;
   #19 = Utf8               rpg/patmat/WisStep$
   #20 = Class              #19           // rpg/patmat/WisStep$
   #21 = Utf8               MODULE$
   #22 = Utf8               Lrpg/patmat/WisStep$;
   #23 = NameAndType        #21:#22       // MODULE$:Lrpg/patmat/WisStep$;
   #24 = Fieldref           #20.#23       // rpg/patmat/WisStep$.MODULE$:Lrpg/patmat/WisStep$;
   #25 = NameAndType        #17:#18       // unapply:(Lrpg/patmat/WisStep;)Lscala/Option;
   #26 = Methodref          #20.#25       // rpg/patmat/WisStep$.unapply:(Lrpg/patmat/WisStep;)Lscala/Option;
   #27 = Utf8               apply
   #28 = Utf8               (Lrpg/patmat/Node;)Lrpg/patmat/WisStep;
   #29 = NameAndType        #27:#28       // apply:(Lrpg/patmat/Node;)Lrpg/patmat/WisStep;
   #30 = Methodref          #20.#29       // rpg/patmat/WisStep$.apply:(Lrpg/patmat/Node;)Lrpg/patmat/WisStep;
   #31 = Utf8               andThen
   #32 = Utf8               (Lscala/Function1;)Lscala/Function1;
   #33 = NameAndType        #31:#32       // andThen:(Lscala/Function1;)Lscala/Function1;
   #34 = Methodref          #20.#33       // rpg/patmat/WisStep$.andThen:(Lscala/Function1;)Lscala/Function1;
   #35 = Utf8               compose
   #36 = NameAndType        #35:#32       // compose:(Lscala/Function1;)Lscala/Function1;
   #37 = Methodref          #20.#36       // rpg/patmat/WisStep$.compose:(Lscala/Function1;)Lscala/Function1;
   #38 = Utf8               ()Lrpg/patmat/Node;
   #39 = NameAndType        #15:#16       // to:Lrpg/patmat/Node;
   #40 = Fieldref           #2.#39        // rpg/patmat/WisStep.to:Lrpg/patmat/Node;
   #41 = Utf8               this
   #42 = Utf8               Lrpg/patmat/WisStep;
   #43 = Utf8               copy
   #44 = Utf8               <init>
   #45 = Utf8               (Lrpg/patmat/Node;)V
   #46 = NameAndType        #44:#45       // "<init>":(Lrpg/patmat/Node;)V
   #47 = Methodref          #2.#46        // rpg/patmat/WisStep."<init>":(Lrpg/patmat/Node;)V
   #48 = Utf8               copy$default$1
   #49 = NameAndType        #15:#38       // to:()Lrpg/patmat/Node;
   #50 = Methodref          #2.#49        // rpg/patmat/WisStep.to:()Lrpg/patmat/Node;
   #51 = Utf8               productPrefix
   #52 = Utf8               ()Ljava/lang/String;
   #53 = Utf8               WisStep
   #54 = String             #53           // WisStep
   #55 = Utf8               productArity
   #56 = Utf8               ()I
   #57 = Utf8               productElement
   #58 = Utf8               (I)Ljava/lang/Object;
   #59 = Utf8               x$1
   #60 = Utf8               java/lang/IndexOutOfBoundsException
   #61 = Class              #60           // java/lang/IndexOutOfBoundsException
   #62 = Utf8               scala/runtime/BoxesRunTime
   #63 = Class              #62           // scala/runtime/BoxesRunTime
   #64 = Utf8               boxToInteger
   #65 = Utf8               (I)Ljava/lang/Integer;
   #66 = NameAndType        #64:#65       // boxToInteger:(I)Ljava/lang/Integer;
   #67 = Methodref          #63.#66       // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   #68 = Utf8               toString
   #69 = NameAndType        #68:#52       // toString:()Ljava/lang/String;
   #70 = Methodref          #4.#69        // java/lang/Object.toString:()Ljava/lang/String;
   #71 = Utf8               (Ljava/lang/String;)V
   #72 = NameAndType        #44:#71       // "<init>":(Ljava/lang/String;)V
   #73 = Methodref          #61.#72       // java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
   #74 = Utf8               I
   #75 = Utf8               productIterator
   #76 = Utf8               ()Lscala/collection/Iterator;
   #77 = Utf8               scala/runtime/ScalaRunTime$
   #78 = Class              #77           // scala/runtime/ScalaRunTime$
   #79 = Utf8               Lscala/runtime/ScalaRunTime$;
   #80 = NameAndType        #21:#79       // MODULE$:Lscala/runtime/ScalaRunTime$;
   #81 = Fieldref           #78.#80       // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   #82 = Utf8               typedProductIterator
   #83 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #84 = NameAndType        #82:#83       // typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
   #85 = Methodref          #78.#84       // scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
   #86 = Utf8               canEqual
   #87 = Utf8               (Ljava/lang/Object;)Z
   #88 = Utf8               Ljava/lang/Object;
   #89 = Utf8               hashCode
   #90 = Utf8               _hashCode
   #91 = Utf8               (Lscala/Product;)I
   #92 = NameAndType        #90:#91       // _hashCode:(Lscala/Product;)I
   #93 = Methodref          #78.#92       // scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
   #94 = Utf8               _toString
   #95 = Utf8               (Lscala/Product;)Ljava/lang/String;
   #96 = NameAndType        #94:#95       // _toString:(Lscala/Product;)Ljava/lang/String;
   #97 = Methodref          #78.#96       // scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
   #98 = Utf8               equals
   #99 = NameAndType        #98:#87       // equals:(Ljava/lang/Object;)Z
  #100 = Methodref          #4.#99        // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #101 = NameAndType        #86:#87       // canEqual:(Ljava/lang/Object;)Z
  #102 = Methodref          #2.#101       // rpg/patmat/WisStep.canEqual:(Ljava/lang/Object;)Z
  #103 = Utf8               ()V
  #104 = NameAndType        #44:#103      // "<init>":()V
  #105 = Methodref          #4.#104       // java/lang/Object."<init>":()V
  #106 = Utf8               $init$
  #107 = Utf8               (Lscala/Product;)V
  #108 = NameAndType        #106:#107     // $init$:(Lscala/Product;)V
  #109 = InterfaceMethodref #8.#108       // scala/Product.$init$:(Lscala/Product;)V
  #110 = Utf8               Code
  #111 = Utf8               Signature
  #112 = Utf8               (Lrpg/patmat/WisStep;)Lscala/Option<Lrpg/patmat/Node;>;
  #113 = Utf8               <A:Ljava/lang/Object;>(Lscala/Function1<Lrpg/patmat/WisStep;TA;>;)Lscala/Function1<Lrpg/patmat/Node;TA;>;
  #114 = Utf8               <A:Ljava/lang/Object;>(Lscala/Function1<TA;Lrpg/patmat/Node;>;)Lscala/Function1<TA;Lrpg/patmat/WisStep;>;
  #115 = Utf8               LocalVariableTable
  #116 = Utf8               LineNumberTable
  #117 = Utf8               MethodParameters
  #118 = Utf8               StackMapTable
  #119 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
  #120 = Utf8               SourceFile
  #121 = Utf8               RuntimeVisibleAnnotations
  #122 = Utf8               ScalaInlineInfo
  #123 = Utf8               ScalaSig
{
  private final rpg.patmat.Node to;
    descriptor: Lrpg/patmat/Node;
    flags: ACC_PRIVATE, ACC_FINAL

  public static scala.Option<rpg.patmat.Node> unapply(rpg.patmat.WisStep);
    descriptor: (Lrpg/patmat/WisStep;)Lscala/Option;
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #24                 // Field rpg/patmat/WisStep$.MODULE$:Lrpg/patmat/WisStep$;
         3: aload_0
         4: invokevirtual #26                 // Method rpg/patmat/WisStep$.unapply:(Lrpg/patmat/WisStep;)Lscala/Option;
         7: areturn
    Signature: #112                         // (Lrpg/patmat/WisStep;)Lscala/Option<Lrpg/patmat/Node;>;

  public static rpg.patmat.WisStep apply(rpg.patmat.Node);
    descriptor: (Lrpg/patmat/Node;)Lrpg/patmat/WisStep;
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #24                 // Field rpg/patmat/WisStep$.MODULE$:Lrpg/patmat/WisStep$;
         3: aload_0
         4: invokevirtual #30                 // Method rpg/patmat/WisStep$.apply:(Lrpg/patmat/Node;)Lrpg/patmat/WisStep;
         7: areturn

  public static <A extends java.lang.Object> scala.Function1<rpg.patmat.Node, A> andThen(scala.Function1<rpg.patmat.WisStep, A>);
    descriptor: (Lscala/Function1;)Lscala/Function1;
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #24                 // Field rpg/patmat/WisStep$.MODULE$:Lrpg/patmat/WisStep$;
         3: aload_0
         4: invokevirtual #34                 // Method rpg/patmat/WisStep$.andThen:(Lscala/Function1;)Lscala/Function1;
         7: areturn
    Signature: #113                         // <A:Ljava/lang/Object;>(Lscala/Function1<Lrpg/patmat/WisStep;TA;>;)Lscala/Function1<Lrpg/patmat/Node;TA;>;

  public static <A extends java.lang.Object> scala.Function1<A, rpg.patmat.WisStep> compose(scala.Function1<A, rpg.patmat.Node>);
    descriptor: (Lscala/Function1;)Lscala/Function1;
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #24                 // Field rpg/patmat/WisStep$.MODULE$:Lrpg/patmat/WisStep$;
         3: aload_0
         4: invokevirtual #37                 // Method rpg/patmat/WisStep$.compose:(Lscala/Function1;)Lscala/Function1;
         7: areturn
    Signature: #114                         // <A:Ljava/lang/Object;>(Lscala/Function1<TA;Lrpg/patmat/Node;>;)Lscala/Function1<TA;Lrpg/patmat/WisStep;>;

  public rpg.patmat.Node to();
    descriptor: ()Lrpg/patmat/Node;
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #40                 // Field to:Lrpg/patmat/Node;
         4: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lrpg/patmat/WisStep;
      LineNumberTable:
        line 16: 0

  public rpg.patmat.WisStep copy(rpg.patmat.Node);
    descriptor: (Lrpg/patmat/Node;)Lrpg/patmat/WisStep;
    flags: ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #2                  // class rpg/patmat/WisStep
         3: dup
         4: aload_1
         5: invokespecial #47                 // Method "<init>":(Lrpg/patmat/Node;)V
         8: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lrpg/patmat/WisStep;
            0       9     1    to   Lrpg/patmat/Node;
      LineNumberTable:
        line 16: 0
    MethodParameters:
      Name                           Flags
      to                             final

  public rpg.patmat.Node copy$default$1();
    descriptor: ()Lrpg/patmat/Node;
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #50                 // Method to:()Lrpg/patmat/Node;
         4: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lrpg/patmat/WisStep;
      LineNumberTable:
        line 16: 0

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #54                 // String WisStep
         2: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lrpg/patmat/WisStep;
      LineNumberTable:
        line 16: 0

  public int productArity();
    descriptor: ()I
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lrpg/patmat/WisStep;
      LineNumberTable:
        line 16: 0

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 0
                       0: 20
                 default: 27
            }
        20: aload_0
        21: invokevirtual #50                 // Method to:()Lrpg/patmat/Node;
        24: goto          42
        27: new           #61                 // class java/lang/IndexOutOfBoundsException
        30: dup
        31: iload_1
        32: invokestatic  #67                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        35: invokevirtual #70                 // Method java/lang/Object.toString:()Ljava/lang/String;
        38: invokespecial #73                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        41: athrow
        42: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      43     0  this   Lrpg/patmat/WisStep;
            0      43     1   x$1   I
      LineNumberTable:
        line 16: 0
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class rpg/patmat/Node ]
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #81                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #85                 // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lrpg/patmat/WisStep;
      LineNumberTable:
        line 16: 0
    Signature: #119                         // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: instanceof    #2                  // class rpg/patmat/WisStep
         4: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lrpg/patmat/WisStep;
            0       5     1   x$1   Ljava/lang/Object;
      LineNumberTable:
        line 16: 0
    MethodParameters:
      Name                           Flags
      x$1                            final

  public int hashCode();
    descriptor: ()I
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #81                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #93                 // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
         7: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lrpg/patmat/WisStep;
      LineNumberTable:
        line 16: 0

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #81                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #97                 // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lrpg/patmat/WisStep;
      LineNumberTable:
        line 16: 0

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     86
         5: aload_1
         6: astore_3
         7: aload_3
         8: instanceof    #2                  // class rpg/patmat/WisStep
        11: ifeq          19
        14: iconst_1
        15: istore_2
        16: goto          27
        19: goto          22
        22: iconst_0
        23: istore_2
        24: goto          27
        27: iload_2
        28: ifeq          90
        31: aload_1
        32: checkcast     #2                  // class rpg/patmat/WisStep
        35: astore        4
        37: aload_0
        38: invokevirtual #50                 // Method to:()Lrpg/patmat/Node;
        41: aload         4
        43: invokevirtual #50                 // Method to:()Lrpg/patmat/Node;
        46: astore        5
        48: dup
        49: ifnonnull     61
        52: pop
        53: aload         5
        55: ifnull        69
        58: goto          82
        61: aload         5
        63: invokevirtual #100                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        66: ifeq          82
        69: aload         4
        71: aload_0
        72: invokevirtual #102                // Method canEqual:(Ljava/lang/Object;)Z
        75: ifeq          82
        78: iconst_1
        79: goto          83
        82: iconst_0
        83: ifeq          90
        86: iconst_1
        87: goto          91
        90: iconst_0
        91: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      92     0  this   Lrpg/patmat/WisStep;
            0      92     1   x$1   Ljava/lang/Object;
      LineNumberTable:
        line 16: 0
      StackMapTable: number_of_entries = 10
        frame_type = 253 /* append */
          offset_delta = 19
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class rpg/patmat/WisStep, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 33
          locals = [ class rpg/patmat/WisStep, class java/lang/Object, int, class java/lang/Object, class rpg/patmat/WisStep, class rpg/patmat/Node ]
          stack = [ class rpg/patmat/Node ]
        frame_type = 7 /* same */
        frame_type = 12 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class rpg/patmat/WisStep, class java/lang/Object ]
          stack = []
        frame_type = 253 /* append */
          offset_delta = 3
          locals = [ int, class java/lang/Object ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class rpg/patmat/WisStep, class java/lang/Object ]
          stack = [ int ]
    MethodParameters:
      Name                           Flags
      x$1                            final

  public rpg.patmat.WisStep(rpg.patmat.Node);
    descriptor: (Lrpg/patmat/Node;)V
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #40                 // Field to:Lrpg/patmat/Node;
         5: aload_0
         6: invokespecial #105                // Method java/lang/Object."<init>":()V
         9: aload_0
        10: invokestatic  #109                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
        13: return
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lrpg/patmat/WisStep;
            0      14     1    to   Lrpg/patmat/Node;
      LineNumberTable:
        line 16: 0
    MethodParameters:
      Name                           Flags
      to                             final
}
SourceFile: "PatMatSkillTrees.scala"
RuntimeVisibleAnnotations:
  0: #12(#13=s#14)
Error: unknown attribute
  ScalaInlineInfo: length = 0x40
   01 00 00 0C 00 2C 00 2D 00 00 56 00 57 00 00 30
   00 26 00 00 2B 00 1C 00 00 62 00 57 00 00 59 00
   38 00 00 37 00 38 00 00 39 00 3A 00 00 4B 00 4C
   00 00 33 00 34 00 00 0F 00 26 00 00 44 00 34 00

Error: unknown attribute
  ScalaSig: length = 0x3
   05 00 00
