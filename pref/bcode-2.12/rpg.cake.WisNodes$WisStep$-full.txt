Classfile /home/krzysiek/workspace/scala-bcode-cutter/pref/target/scala-2.12/classes/rpg/cake/WisNodes$WisStep$.class
  Last modified Apr 8, 2018; size 1774 bytes
  MD5 checksum 73782a2946952fbe89f2d012073a808d
  Compiled from "CakeSkillTrees.scala"
public class rpg.cake.WisNodes$WisStep$ extends scala.runtime.AbstractFunction1<rpg.cake.Nodes$Node, rpg.cake.WisNodes$WisStep> implements scala.Serializable
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
   #1 = Utf8               rpg/cake/WisNodes$WisStep$
   #2 = Class              #1             // rpg/cake/WisNodes$WisStep$
   #3 = Utf8               Lscala/runtime/AbstractFunction1<Lrpg/cake/Nodes$Node;Lrpg/cake/WisNodes$WisStep;>;Lscala/Serializable;
   #4 = Utf8               scala/runtime/AbstractFunction1
   #5 = Class              #4             // scala/runtime/AbstractFunction1
   #6 = Utf8               scala/Serializable
   #7 = Class              #6             // scala/Serializable
   #8 = Utf8               CakeSkillTrees.scala
   #9 = Utf8               rpg/cake/Nodes$Node
  #10 = Class              #9             // rpg/cake/Nodes$Node
  #11 = Utf8               rpg/cake/Nodes
  #12 = Class              #11            // rpg/cake/Nodes
  #13 = Utf8               Node
  #14 = Utf8               rpg/cake/WisNodes$WisStep
  #15 = Class              #14            // rpg/cake/WisNodes$WisStep
  #16 = Utf8               rpg/cake/WisNodes
  #17 = Class              #16            // rpg/cake/WisNodes
  #18 = Utf8               WisStep
  #19 = Utf8               WisStep$
  #20 = Utf8               $outer
  #21 = Utf8               Lrpg/cake/Nodes;
  #22 = Utf8               toString
  #23 = Utf8               ()Ljava/lang/String;
  #24 = String             #18            // WisStep
  #25 = Utf8               this
  #26 = Utf8               Lrpg/cake/WisNodes$WisStep$;
  #27 = Utf8               apply
  #28 = Utf8               (Lrpg/cake/Nodes$Node;)Lrpg/cake/WisNodes$WisStep;
  #29 = Utf8               to
  #30 = NameAndType        #20:#21        // $outer:Lrpg/cake/Nodes;
  #31 = Fieldref           #2.#30         // rpg/cake/WisNodes$WisStep$.$outer:Lrpg/cake/Nodes;
  #32 = Utf8               <init>
  #33 = Utf8               (Lrpg/cake/Nodes;Lrpg/cake/Nodes$Node;)V
  #34 = NameAndType        #32:#33        // "<init>":(Lrpg/cake/Nodes;Lrpg/cake/Nodes$Node;)V
  #35 = Methodref          #15.#34        // rpg/cake/WisNodes$WisStep."<init>":(Lrpg/cake/Nodes;Lrpg/cake/Nodes$Node;)V
  #36 = Utf8               Lrpg/cake/Nodes$Node;
  #37 = Utf8               unapply
  #38 = Utf8               (Lrpg/cake/WisNodes$WisStep;)Lscala/Option;
  #39 = Utf8               x$0
  #40 = Utf8               scala/None$
  #41 = Class              #40            // scala/None$
  #42 = Utf8               MODULE$
  #43 = Utf8               Lscala/None$;
  #44 = NameAndType        #42:#43        // MODULE$:Lscala/None$;
  #45 = Fieldref           #41.#44        // scala/None$.MODULE$:Lscala/None$;
  #46 = Utf8               scala/Some
  #47 = Class              #46            // scala/Some
  #48 = Utf8               ()Lrpg/cake/Nodes$Node;
  #49 = NameAndType        #29:#48        // to:()Lrpg/cake/Nodes$Node;
  #50 = Methodref          #15.#49        // rpg/cake/WisNodes$WisStep.to:()Lrpg/cake/Nodes$Node;
  #51 = Utf8               (Ljava/lang/Object;)V
  #52 = NameAndType        #32:#51        // "<init>":(Ljava/lang/Object;)V
  #53 = Methodref          #47.#52        // scala/Some."<init>":(Ljava/lang/Object;)V
  #54 = Utf8               Lrpg/cake/WisNodes$WisStep;
  #55 = Utf8               scala/Option
  #56 = Class              #55            // scala/Option
  #57 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #58 = Utf8               v1
  #59 = NameAndType        #27:#28        // apply:(Lrpg/cake/Nodes$Node;)Lrpg/cake/WisNodes$WisStep;
  #60 = Methodref          #2.#59         // rpg/cake/WisNodes$WisStep$.apply:(Lrpg/cake/Nodes$Node;)Lrpg/cake/WisNodes$WisStep;
  #61 = Utf8               Ljava/lang/Object;
  #62 = Utf8               (Lrpg/cake/Nodes;)V
  #63 = Utf8               ()V
  #64 = NameAndType        #32:#63        // "<init>":()V
  #65 = Methodref          #5.#64         // scala/runtime/AbstractFunction1."<init>":()V
  #66 = Utf8               Code
  #67 = Utf8               LocalVariableTable
  #68 = Utf8               LineNumberTable
  #69 = Utf8               MethodParameters
  #70 = Utf8               StackMapTable
  #71 = Utf8               Signature
  #72 = Utf8               (Lrpg/cake/WisNodes$WisStep;)Lscala/Option<Lrpg/cake/Nodes$Node;>;
  #73 = Utf8               SourceFile
  #74 = Utf8               InnerClasses
  #75 = Utf8               ScalaInlineInfo
  #76 = Utf8               Scala
{
  private final rpg.cake.Nodes $outer;
    descriptor: Lrpg/cake/Nodes;
    flags: ACC_PRIVATE, ACC_FINAL, ACC_SYNTHETIC

  public final java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #24                 // String WisStep
         2: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lrpg/cake/WisNodes$WisStep$;
      LineNumberTable:
        line 9: 0

  public rpg.cake.WisNodes$WisStep apply(rpg.cake.Nodes$Node);
    descriptor: (Lrpg/cake/Nodes$Node;)Lrpg/cake/WisNodes$WisStep;
    flags: ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #15                 // class rpg/cake/WisNodes$WisStep
         3: dup
         4: aload_0
         5: getfield      #31                 // Field $outer:Lrpg/cake/Nodes;
         8: aload_1
         9: invokespecial #35                 // Method rpg/cake/WisNodes$WisStep."<init>":(Lrpg/cake/Nodes;Lrpg/cake/Nodes$Node;)V
        12: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lrpg/cake/WisNodes$WisStep$;
            0      13     1    to   Lrpg/cake/Nodes$Node;
      LineNumberTable:
        line 9: 0
    MethodParameters:
      Name                           Flags
      to                             final

  public scala.Option<rpg.cake.Nodes$Node> unapply(rpg.cake.WisNodes$WisStep);
    descriptor: (Lrpg/cake/WisNodes$WisStep;)Lscala/Option;
    flags: ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_1
         1: ifnonnull     10
         4: getstatic     #45                 // Field scala/None$.MODULE$:Lscala/None$;
         7: goto          21
        10: new           #47                 // class scala/Some
        13: dup
        14: aload_1
        15: invokevirtual #50                 // Method rpg/cake/WisNodes$WisStep.to:()Lrpg/cake/Nodes$Node;
        18: invokespecial #53                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        21: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lrpg/cake/WisNodes$WisStep$;
            0      22     1   x$0   Lrpg/cake/WisNodes$WisStep;
      LineNumberTable:
        line 9: 0
      StackMapTable: number_of_entries = 2
        frame_type = 10 /* same */
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
    Signature: #72                          // (Lrpg/cake/WisNodes$WisStep;)Lscala/Option<Lrpg/cake/Nodes$Node;>;
    MethodParameters:
      Name                           Flags
      x$0                            final

  public java.lang.Object apply(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #10                 // class rpg/cake/Nodes$Node
         5: invokevirtual #60                 // Method apply:(Lrpg/cake/Nodes$Node;)Lrpg/cake/WisNodes$WisStep;
         8: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lrpg/cake/WisNodes$WisStep$;
            0       9     1    v1   Ljava/lang/Object;
      LineNumberTable:
        line 9: 0
    MethodParameters:
      Name                           Flags
      v1                             final

  public rpg.cake.WisNodes$WisStep$(rpg.cake.Nodes);
    descriptor: (Lrpg/cake/Nodes;)V
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: athrow
         6: aload_0
         7: aload_1
         8: putfield      #31                 // Field $outer:Lrpg/cake/Nodes;
        11: aload_0
        12: invokespecial #65                 // Method scala/runtime/AbstractFunction1."<init>":()V
        15: return
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lrpg/cake/WisNodes$WisStep$;
            0      16     1 $outer   Lrpg/cake/Nodes;
      LineNumberTable:
        line 9: 0
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
    MethodParameters:
      Name                           Flags
      $outer                         final
}
Signature: #3                           // Lscala/runtime/AbstractFunction1<Lrpg/cake/Nodes$Node;Lrpg/cake/WisNodes$WisStep;>;Lscala/Serializable;
SourceFile: "CakeSkillTrees.scala"
InnerClasses:
     public #13= #10 of #12; //Node=class rpg/cake/Nodes$Node of class rpg/cake/Nodes
     public #18= #15 of #17; //WisStep=class rpg/cake/WisNodes$WisStep of class rpg/cake/WisNodes
     public #19= #2 of #17; //WisStep$=class rpg/cake/WisNodes$WisStep$ of class rpg/cake/WisNodes
Error: unknown attribute
  ScalaInlineInfo: length = 0x1D
   01 01 00 05 00 20 00 3E 01 00 1B 00 39 01 00 1B
   00 1C 01 00 16 00 17 01 00 25 00 26 01
Error: unknown attribute
  Scala: length = 0x0

