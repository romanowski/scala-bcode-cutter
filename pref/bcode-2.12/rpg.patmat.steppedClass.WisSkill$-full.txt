Classfile /home/krzysiek/workspace/scala-bcode-cutter/pref/target/scala-2.12/classes/rpg/patmat/steppedClass/WisSkill$.class
  Last modified Apr 8, 2018; size 1727 bytes
  MD5 checksum be3ec79411447eb20aeac0417e134bf5
  Compiled from "PatMatSkillTrees.scala"
public final class rpg.patmat.steppedClass.WisSkill$ extends scala.runtime.AbstractFunction1<java.lang.String, rpg.patmat.steppedClass.WisSkill> implements scala.Serializable
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_FINAL, ACC_SUPER
Constant pool:
   #1 = Utf8               rpg/patmat/steppedClass/WisSkill$
   #2 = Class              #1             // rpg/patmat/steppedClass/WisSkill$
   #3 = Utf8               Lscala/runtime/AbstractFunction1<Ljava/lang/String;Lrpg/patmat/steppedClass/WisSkill;>;Lscala/Serializable;
   #4 = Utf8               scala/runtime/AbstractFunction1
   #5 = Class              #4             // scala/runtime/AbstractFunction1
   #6 = Utf8               scala/Serializable
   #7 = Class              #6             // scala/Serializable
   #8 = Utf8               PatMatSkillTrees.scala
   #9 = Utf8               MODULE$
  #10 = Utf8               Lrpg/patmat/steppedClass/WisSkill$;
  #11 = Utf8               <clinit>
  #12 = Utf8               ()V
  #13 = Utf8               <init>
  #14 = NameAndType        #13:#12        // "<init>":()V
  #15 = Methodref          #2.#14         // rpg/patmat/steppedClass/WisSkill$."<init>":()V
  #16 = Utf8               toString
  #17 = Utf8               ()Ljava/lang/String;
  #18 = Utf8               WisSkill
  #19 = String             #18            // WisSkill
  #20 = Utf8               this
  #21 = Utf8               apply
  #22 = Utf8               (Ljava/lang/String;)Lrpg/patmat/steppedClass/WisSkill;
  #23 = Utf8               name
  #24 = Utf8               rpg/patmat/steppedClass/WisSkill
  #25 = Class              #24            // rpg/patmat/steppedClass/WisSkill
  #26 = Utf8               (Ljava/lang/String;)V
  #27 = NameAndType        #13:#26        // "<init>":(Ljava/lang/String;)V
  #28 = Methodref          #25.#27        // rpg/patmat/steppedClass/WisSkill."<init>":(Ljava/lang/String;)V
  #29 = Utf8               Ljava/lang/String;
  #30 = Utf8               unapply
  #31 = Utf8               (Lrpg/patmat/steppedClass/WisSkill;)Lscala/Option;
  #32 = Utf8               x$0
  #33 = Utf8               scala/None$
  #34 = Class              #33            // scala/None$
  #35 = Utf8               Lscala/None$;
  #36 = NameAndType        #9:#35         // MODULE$:Lscala/None$;
  #37 = Fieldref           #34.#36        // scala/None$.MODULE$:Lscala/None$;
  #38 = Utf8               scala/Some
  #39 = Class              #38            // scala/Some
  #40 = NameAndType        #23:#17        // name:()Ljava/lang/String;
  #41 = Methodref          #25.#40        // rpg/patmat/steppedClass/WisSkill.name:()Ljava/lang/String;
  #42 = Utf8               (Ljava/lang/Object;)V
  #43 = NameAndType        #13:#42        // "<init>":(Ljava/lang/Object;)V
  #44 = Methodref          #39.#43        // scala/Some."<init>":(Ljava/lang/Object;)V
  #45 = Utf8               Lrpg/patmat/steppedClass/WisSkill;
  #46 = Utf8               scala/Option
  #47 = Class              #46            // scala/Option
  #48 = Utf8               readResolve
  #49 = Utf8               ()Ljava/lang/Object;
  #50 = NameAndType        #9:#10         // MODULE$:Lrpg/patmat/steppedClass/WisSkill$;
  #51 = Fieldref           #2.#50         // rpg/patmat/steppedClass/WisSkill$.MODULE$:Lrpg/patmat/steppedClass/WisSkill$;
  #52 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #53 = Utf8               v1
  #54 = Utf8               java/lang/String
  #55 = Class              #54            // java/lang/String
  #56 = NameAndType        #21:#22        // apply:(Ljava/lang/String;)Lrpg/patmat/steppedClass/WisSkill;
  #57 = Methodref          #2.#56         // rpg/patmat/steppedClass/WisSkill$.apply:(Ljava/lang/String;)Lrpg/patmat/steppedClass/WisSkill;
  #58 = Utf8               Ljava/lang/Object;
  #59 = Methodref          #5.#14         // scala/runtime/AbstractFunction1."<init>":()V
  #60 = Utf8               Code
  #61 = Utf8               LocalVariableTable
  #62 = Utf8               LineNumberTable
  #63 = Utf8               MethodParameters
  #64 = Utf8               StackMapTable
  #65 = Utf8               Signature
  #66 = Utf8               (Lrpg/patmat/steppedClass/WisSkill;)Lscala/Option<Ljava/lang/String;>;
  #67 = Utf8               SourceFile
  #68 = Utf8               ScalaInlineInfo
  #69 = Utf8               Scala
{
  public static rpg.patmat.steppedClass.WisSkill$ MODULE$;
    descriptor: Lrpg/patmat/steppedClass/WisSkill$;
    flags: ACC_PUBLIC, ACC_STATIC

  public static {};
    descriptor: ()V
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: new           #2                  // class rpg/patmat/steppedClass/WisSkill$
         3: invokespecial #15                 // Method "<init>":()V
         6: return

  public final java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #19                 // String WisSkill
         2: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lrpg/patmat/steppedClass/WisSkill$;
      LineNumberTable:
        line 28: 0

  public rpg.patmat.steppedClass.WisSkill apply(java.lang.String);
    descriptor: (Ljava/lang/String;)Lrpg/patmat/steppedClass/WisSkill;
    flags: ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #25                 // class rpg/patmat/steppedClass/WisSkill
         3: dup
         4: aload_1
         5: invokespecial #28                 // Method rpg/patmat/steppedClass/WisSkill."<init>":(Ljava/lang/String;)V
         8: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lrpg/patmat/steppedClass/WisSkill$;
            0       9     1  name   Ljava/lang/String;
      LineNumberTable:
        line 28: 0
    MethodParameters:
      Name                           Flags
      name                           final

  public scala.Option<java.lang.String> unapply(rpg.patmat.steppedClass.WisSkill);
    descriptor: (Lrpg/patmat/steppedClass/WisSkill;)Lscala/Option;
    flags: ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_1
         1: ifnonnull     10
         4: getstatic     #37                 // Field scala/None$.MODULE$:Lscala/None$;
         7: goto          21
        10: new           #39                 // class scala/Some
        13: dup
        14: aload_1
        15: invokevirtual #41                 // Method rpg/patmat/steppedClass/WisSkill.name:()Ljava/lang/String;
        18: invokespecial #44                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        21: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lrpg/patmat/steppedClass/WisSkill$;
            0      22     1   x$0   Lrpg/patmat/steppedClass/WisSkill;
      LineNumberTable:
        line 28: 0
      StackMapTable: number_of_entries = 2
        frame_type = 10 /* same */
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
    Signature: #66                          // (Lrpg/patmat/steppedClass/WisSkill;)Lscala/Option<Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      x$0                            final

  private java.lang.Object readResolve();
    descriptor: ()Ljava/lang/Object;
    flags: ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #51                 // Field MODULE$:Lrpg/patmat/steppedClass/WisSkill$;
         3: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lrpg/patmat/steppedClass/WisSkill$;
      LineNumberTable:
        line 28: 0

  public java.lang.Object apply(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #55                 // class java/lang/String
         5: invokevirtual #57                 // Method apply:(Ljava/lang/String;)Lrpg/patmat/steppedClass/WisSkill;
         8: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lrpg/patmat/steppedClass/WisSkill$;
            0       9     1    v1   Ljava/lang/Object;
      LineNumberTable:
        line 28: 0
    MethodParameters:
      Name                           Flags
      v1                             final

  private rpg.patmat.steppedClass.WisSkill$();
    descriptor: ()V
    flags: ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #59                 // Method scala/runtime/AbstractFunction1."<init>":()V
         4: aload_0
         5: putstatic     #51                 // Field MODULE$:Lrpg/patmat/steppedClass/WisSkill$;
         8: return
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lrpg/patmat/steppedClass/WisSkill$;
      LineNumberTable:
        line 28: 0
}
Signature: #3                           // Lscala/runtime/AbstractFunction1<Ljava/lang/String;Lrpg/patmat/steppedClass/WisSkill;>;Lscala/Serializable;
SourceFile: "PatMatSkillTrees.scala"
Error: unknown attribute
  ScalaInlineInfo: length = 0x22
   01 01 00 06 00 0D 00 0C 01 00 15 00 34 01 00 15
   00 16 01 00 30 00 31 01 00 10 00 11 01 00 1E 00
   1F 01
Error: unknown attribute
  Scala: length = 0x0

