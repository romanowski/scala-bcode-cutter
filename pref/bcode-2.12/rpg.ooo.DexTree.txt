Compiled from "OOOSkillTrees.scala"
public class rpg.ooo.DexTree implements rpg.ooo.Node,scala.Product,scala.Serializable {
  private final rpg.ooo.Node left;

  private final rpg.ooo.Node right;

  public static scala.Option<scala.Tuple2<rpg.ooo.Node, rpg.ooo.Node>> unapply(rpg.ooo.DexTree);
    Code:
       0: getstatic     #25                 // Field rpg/ooo/DexTree$.MODULE$:Lrpg/ooo/DexTree$;
       3: aload_0
       4: invokevirtual #27                 // Method rpg/ooo/DexTree$.unapply:(Lrpg/ooo/DexTree;)Lscala/Option;
       7: areturn

  public static rpg.ooo.DexTree apply(rpg.ooo.Node, rpg.ooo.Node);
    Code:
       0: getstatic     #25                 // Field rpg/ooo/DexTree$.MODULE$:Lrpg/ooo/DexTree$;
       3: aload_0
       4: aload_1
       5: invokevirtual #31                 // Method rpg/ooo/DexTree$.apply:(Lrpg/ooo/Node;Lrpg/ooo/Node;)Lrpg/ooo/DexTree;
       8: areturn

  public static scala.Function1<scala.Tuple2<rpg.ooo.Node, rpg.ooo.Node>, rpg.ooo.DexTree> tupled();
    Code:
       0: getstatic     #25                 // Field rpg/ooo/DexTree$.MODULE$:Lrpg/ooo/DexTree$;
       3: invokevirtual #35                 // Method rpg/ooo/DexTree$.tupled:()Lscala/Function1;
       6: areturn

  public static scala.Function1<rpg.ooo.Node, scala.Function1<rpg.ooo.Node, rpg.ooo.DexTree>> curried();
    Code:
       0: getstatic     #25                 // Field rpg/ooo/DexTree$.MODULE$:Lrpg/ooo/DexTree$;
       3: invokevirtual #38                 // Method rpg/ooo/DexTree$.curried:()Lscala/Function1;
       6: areturn

  public rpg.ooo.Node left();
    Code:
       0: aload_0
       1: getfield      #41                 // Field left:Lrpg/ooo/Node;
       4: areturn

  public rpg.ooo.Node right();
    Code:
       0: aload_0
       1: getfield      #45                 // Field right:Lrpg/ooo/Node;
       4: areturn

  public int cost(rpg.PlayerTraits);
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method left:()Lrpg/ooo/Node;
       4: aload_1
       5: invokeinterface #52,  2           // InterfaceMethod rpg/ooo/Node.cost:(Lrpg/PlayerTraits;)I
      10: aload_0
      11: invokevirtual #54                 // Method right:()Lrpg/ooo/Node;
      14: aload_1
      15: invokeinterface #52,  2           // InterfaceMethod rpg/ooo/Node.cost:(Lrpg/PlayerTraits;)I
      20: iadd
      21: aload_1
      22: invokevirtual #60                 // Method rpg/PlayerTraits.dexCost:()I
      25: iadd
      26: ireturn

  public rpg.ooo.DexTree copy(rpg.ooo.Node, rpg.ooo.Node);
    Code:
       0: new           #2                  // class rpg/ooo/DexTree
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #66                 // Method "<init>":(Lrpg/ooo/Node;Lrpg/ooo/Node;)V
       9: areturn

  public rpg.ooo.Node copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method left:()Lrpg/ooo/Node;
       4: areturn

  public rpg.ooo.Node copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method right:()Lrpg/ooo/Node;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #72                 // String DexTree
       2: areturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 1
                     0: 24
                     1: 31
               default: 38
          }
      24: aload_0
      25: invokevirtual #50                 // Method left:()Lrpg/ooo/Node;
      28: goto          53
      31: aload_0
      32: invokevirtual #54                 // Method right:()Lrpg/ooo/Node;
      35: goto          53
      38: new           #78                 // class java/lang/IndexOutOfBoundsException
      41: dup
      42: iload_1
      43: invokestatic  #84                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      46: invokevirtual #87                 // Method java/lang/Object.toString:()Ljava/lang/String;
      49: invokespecial #90                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #98                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #102                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class rpg/ooo/DexTree
       4: ireturn

  public int hashCode();
    Code:
       0: getstatic     #98                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #110                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #98                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #114                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     118
       5: aload_1
       6: astore_3
       7: aload_3
       8: instanceof    #2                  // class rpg/ooo/DexTree
      11: ifeq          19
      14: iconst_1
      15: istore_2
      16: goto          27
      19: goto          22
      22: iconst_0
      23: istore_2
      24: goto          27
      27: iload_2
      28: ifeq          122
      31: aload_1
      32: checkcast     #2                  // class rpg/ooo/DexTree
      35: astore        4
      37: aload_0
      38: invokevirtual #50                 // Method left:()Lrpg/ooo/Node;
      41: aload         4
      43: invokevirtual #50                 // Method left:()Lrpg/ooo/Node;
      46: astore        5
      48: dup
      49: ifnonnull     61
      52: pop
      53: aload         5
      55: ifnull        69
      58: goto          114
      61: aload         5
      63: invokevirtual #117                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      66: ifeq          114
      69: aload_0
      70: invokevirtual #54                 // Method right:()Lrpg/ooo/Node;
      73: aload         4
      75: invokevirtual #54                 // Method right:()Lrpg/ooo/Node;
      78: astore        6
      80: dup
      81: ifnonnull     93
      84: pop
      85: aload         6
      87: ifnull        101
      90: goto          114
      93: aload         6
      95: invokevirtual #117                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      98: ifeq          114
     101: aload         4
     103: aload_0
     104: invokevirtual #119                // Method canEqual:(Ljava/lang/Object;)Z
     107: ifeq          114
     110: iconst_1
     111: goto          115
     114: iconst_0
     115: ifeq          122
     118: iconst_1
     119: goto          123
     122: iconst_0
     123: ireturn

  public rpg.ooo.DexTree(rpg.ooo.Node, rpg.ooo.Node);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #41                 // Field left:Lrpg/ooo/Node;
       5: aload_0
       6: aload_2
       7: putfield      #45                 // Field right:Lrpg/ooo/Node;
      10: aload_0
      11: invokespecial #122                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #126                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
      18: return
}
