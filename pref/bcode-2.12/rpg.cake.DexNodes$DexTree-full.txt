Classfile /home/krzysiek/workspace/scala-bcode-cutter/pref/target/scala-2.12/classes/rpg/cake/DexNodes$DexTree.class
  Last modified Apr 8, 2018; size 3233 bytes
  MD5 checksum ee888be071c02b2154a4d59dc5558d7e
  Compiled from "CakeSkillTrees.scala"
public class rpg.cake.DexNodes$DexTree implements rpg.cake.Nodes$Node,scala.Product,scala.Serializable
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
    #1 = Utf8               rpg/cake/DexNodes$DexTree
    #2 = Class              #1            // rpg/cake/DexNodes$DexTree
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               rpg/cake/Nodes$Node
    #6 = Class              #5            // rpg/cake/Nodes$Node
    #7 = Utf8               scala/Product
    #8 = Class              #7            // scala/Product
    #9 = Utf8               scala/Serializable
   #10 = Class              #9            // scala/Serializable
   #11 = Utf8               CakeSkillTrees.scala
   #12 = Utf8               rpg/cake/DexNodes
   #13 = Class              #12           // rpg/cake/DexNodes
   #14 = Utf8               DexTree
   #15 = Utf8               rpg/cake/Nodes
   #16 = Class              #15           // rpg/cake/Nodes
   #17 = Utf8               Node
   #18 = Utf8               left
   #19 = Utf8               Lrpg/cake/Nodes$Node;
   #20 = Utf8               right
   #21 = Utf8               $outer
   #22 = Utf8               Lrpg/cake/Nodes;
   #23 = Utf8               ()Lrpg/cake/Nodes$Node;
   #24 = NameAndType        #18:#19       // left:Lrpg/cake/Nodes$Node;
   #25 = Fieldref           #2.#24        // rpg/cake/DexNodes$DexTree.left:Lrpg/cake/Nodes$Node;
   #26 = Utf8               this
   #27 = Utf8               Lrpg/cake/DexNodes$DexTree;
   #28 = NameAndType        #20:#19       // right:Lrpg/cake/Nodes$Node;
   #29 = Fieldref           #2.#28        // rpg/cake/DexNodes$DexTree.right:Lrpg/cake/Nodes$Node;
   #30 = Utf8               copy
   #31 = Utf8               (Lrpg/cake/Nodes$Node;Lrpg/cake/Nodes$Node;)Lrpg/cake/DexNodes$DexTree;
   #32 = Utf8               rpg$cake$DexNodes$DexTree$$$outer
   #33 = Utf8               ()Lrpg/cake/Nodes;
   #34 = NameAndType        #32:#33       // rpg$cake$DexNodes$DexTree$$$outer:()Lrpg/cake/Nodes;
   #35 = Methodref          #2.#34        // rpg/cake/DexNodes$DexTree.rpg$cake$DexNodes$DexTree$$$outer:()Lrpg/cake/Nodes;
   #36 = Utf8               <init>
   #37 = Utf8               (Lrpg/cake/Nodes;Lrpg/cake/Nodes$Node;Lrpg/cake/Nodes$Node;)V
   #38 = NameAndType        #36:#37       // "<init>":(Lrpg/cake/Nodes;Lrpg/cake/Nodes$Node;Lrpg/cake/Nodes$Node;)V
   #39 = Methodref          #2.#38        // rpg/cake/DexNodes$DexTree."<init>":(Lrpg/cake/Nodes;Lrpg/cake/Nodes$Node;Lrpg/cake/Nodes$Node;)V
   #40 = Utf8               copy$default$1
   #41 = NameAndType        #18:#23       // left:()Lrpg/cake/Nodes$Node;
   #42 = Methodref          #2.#41        // rpg/cake/DexNodes$DexTree.left:()Lrpg/cake/Nodes$Node;
   #43 = Utf8               copy$default$2
   #44 = NameAndType        #20:#23       // right:()Lrpg/cake/Nodes$Node;
   #45 = Methodref          #2.#44        // rpg/cake/DexNodes$DexTree.right:()Lrpg/cake/Nodes$Node;
   #46 = Utf8               productPrefix
   #47 = Utf8               ()Ljava/lang/String;
   #48 = String             #14           // DexTree
   #49 = Utf8               productArity
   #50 = Utf8               ()I
   #51 = Utf8               productElement
   #52 = Utf8               (I)Ljava/lang/Object;
   #53 = Utf8               x$1
   #54 = Utf8               java/lang/IndexOutOfBoundsException
   #55 = Class              #54           // java/lang/IndexOutOfBoundsException
   #56 = Utf8               scala/runtime/BoxesRunTime
   #57 = Class              #56           // scala/runtime/BoxesRunTime
   #58 = Utf8               boxToInteger
   #59 = Utf8               (I)Ljava/lang/Integer;
   #60 = NameAndType        #58:#59       // boxToInteger:(I)Ljava/lang/Integer;
   #61 = Methodref          #57.#60       // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   #62 = Utf8               toString
   #63 = NameAndType        #62:#47       // toString:()Ljava/lang/String;
   #64 = Methodref          #4.#63        // java/lang/Object.toString:()Ljava/lang/String;
   #65 = Utf8               (Ljava/lang/String;)V
   #66 = NameAndType        #36:#65       // "<init>":(Ljava/lang/String;)V
   #67 = Methodref          #55.#66       // java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
   #68 = Utf8               I
   #69 = Utf8               productIterator
   #70 = Utf8               ()Lscala/collection/Iterator;
   #71 = Utf8               scala/runtime/ScalaRunTime$
   #72 = Class              #71           // scala/runtime/ScalaRunTime$
   #73 = Utf8               MODULE$
   #74 = Utf8               Lscala/runtime/ScalaRunTime$;
   #75 = NameAndType        #73:#74       // MODULE$:Lscala/runtime/ScalaRunTime$;
   #76 = Fieldref           #72.#75       // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   #77 = Utf8               typedProductIterator
   #78 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #79 = NameAndType        #77:#78       // typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
   #80 = Methodref          #72.#79       // scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
   #81 = Utf8               canEqual
   #82 = Utf8               (Ljava/lang/Object;)Z
   #83 = Utf8               Ljava/lang/Object;
   #84 = Utf8               hashCode
   #85 = Utf8               _hashCode
   #86 = Utf8               (Lscala/Product;)I
   #87 = NameAndType        #85:#86       // _hashCode:(Lscala/Product;)I
   #88 = Methodref          #72.#87       // scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
   #89 = Utf8               _toString
   #90 = Utf8               (Lscala/Product;)Ljava/lang/String;
   #91 = NameAndType        #89:#90       // _toString:(Lscala/Product;)Ljava/lang/String;
   #92 = Methodref          #72.#91       // scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
   #93 = Utf8               equals
   #94 = NameAndType        #93:#82       // equals:(Ljava/lang/Object;)Z
   #95 = Methodref          #4.#94        // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #96 = NameAndType        #81:#82       // canEqual:(Ljava/lang/Object;)Z
   #97 = Methodref          #2.#96        // rpg/cake/DexNodes$DexTree.canEqual:(Ljava/lang/Object;)Z
   #98 = NameAndType        #21:#22       // $outer:Lrpg/cake/Nodes;
   #99 = Fieldref           #2.#98        // rpg/cake/DexNodes$DexTree.$outer:Lrpg/cake/Nodes;
  #100 = Utf8               ()V
  #101 = NameAndType        #36:#100      // "<init>":()V
  #102 = Methodref          #4.#101       // java/lang/Object."<init>":()V
  #103 = Utf8               $init$
  #104 = Utf8               (Lscala/Product;)V
  #105 = NameAndType        #103:#104     // $init$:(Lscala/Product;)V
  #106 = InterfaceMethodref #8.#105       // scala/Product.$init$:(Lscala/Product;)V
  #107 = Utf8               Code
  #108 = Utf8               LocalVariableTable
  #109 = Utf8               LineNumberTable
  #110 = Utf8               MethodParameters
  #111 = Utf8               StackMapTable
  #112 = Utf8               Signature
  #113 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
  #114 = Utf8               SourceFile
  #115 = Utf8               InnerClasses
  #116 = Utf8               ScalaInlineInfo
  #117 = Utf8               Scala
{
  private final rpg.cake.Nodes$Node left;
    descriptor: Lrpg/cake/Nodes$Node;
    flags: ACC_PRIVATE, ACC_FINAL

  private final rpg.cake.Nodes$Node right;
    descriptor: Lrpg/cake/Nodes$Node;
    flags: ACC_PRIVATE, ACC_FINAL

  public final rpg.cake.Nodes $outer;
    descriptor: Lrpg/cake/Nodes;
    flags: ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public rpg.cake.Nodes$Node left();
    descriptor: ()Lrpg/cake/Nodes$Node;
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #25                 // Field left:Lrpg/cake/Nodes$Node;
         4: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lrpg/cake/DexNodes$DexTree;
      LineNumberTable:
        line 16: 0

  public rpg.cake.Nodes$Node right();
    descriptor: ()Lrpg/cake/Nodes$Node;
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #29                 // Field right:Lrpg/cake/Nodes$Node;
         4: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lrpg/cake/DexNodes$DexTree;
      LineNumberTable:
        line 16: 0

  public rpg.cake.DexNodes$DexTree copy(rpg.cake.Nodes$Node, rpg.cake.Nodes$Node);
    descriptor: (Lrpg/cake/Nodes$Node;Lrpg/cake/Nodes$Node;)Lrpg/cake/DexNodes$DexTree;
    flags: ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=3
         0: new           #2                  // class rpg/cake/DexNodes$DexTree
         3: dup
         4: aload_0
         5: invokevirtual #35                 // Method rpg$cake$DexNodes$DexTree$$$outer:()Lrpg/cake/Nodes;
         8: aload_1
         9: aload_2
        10: invokespecial #39                 // Method "<init>":(Lrpg/cake/Nodes;Lrpg/cake/Nodes$Node;Lrpg/cake/Nodes$Node;)V
        13: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lrpg/cake/DexNodes$DexTree;
            0      14     1  left   Lrpg/cake/Nodes$Node;
            0      14     2 right   Lrpg/cake/Nodes$Node;
      LineNumberTable:
        line 16: 0
    MethodParameters:
      Name                           Flags
      left                           final
      right                          final

  public rpg.cake.Nodes$Node copy$default$1();
    descriptor: ()Lrpg/cake/Nodes$Node;
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #42                 // Method left:()Lrpg/cake/Nodes$Node;
         4: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lrpg/cake/DexNodes$DexTree;
      LineNumberTable:
        line 16: 0

  public rpg.cake.Nodes$Node copy$default$2();
    descriptor: ()Lrpg/cake/Nodes$Node;
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #45                 // Method right:()Lrpg/cake/Nodes$Node;
         4: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lrpg/cake/DexNodes$DexTree;
      LineNumberTable:
        line 16: 0

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #48                 // String DexTree
         2: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lrpg/cake/DexNodes$DexTree;
      LineNumberTable:
        line 16: 0

  public int productArity();
    descriptor: ()I
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_2
         1: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lrpg/cake/DexNodes$DexTree;
      LineNumberTable:
        line 16: 0

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 1
                       0: 24
                       1: 31
                 default: 38
            }
        24: aload_0
        25: invokevirtual #42                 // Method left:()Lrpg/cake/Nodes$Node;
        28: goto          53
        31: aload_0
        32: invokevirtual #45                 // Method right:()Lrpg/cake/Nodes$Node;
        35: goto          53
        38: new           #55                 // class java/lang/IndexOutOfBoundsException
        41: dup
        42: iload_1
        43: invokestatic  #61                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        46: invokevirtual #64                 // Method java/lang/Object.toString:()Ljava/lang/String;
        49: invokespecial #67                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        52: athrow
        53: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      54     0  this   Lrpg/cake/DexNodes$DexTree;
            0      54     1   x$1   I
      LineNumberTable:
        line 16: 0
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class rpg/cake/Nodes$Node ]
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #76                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #80                 // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lrpg/cake/DexNodes$DexTree;
      LineNumberTable:
        line 16: 0
    Signature: #113                         // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: instanceof    #2                  // class rpg/cake/DexNodes$DexTree
         4: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lrpg/cake/DexNodes$DexTree;
            0       5     1   x$1   Ljava/lang/Object;
      LineNumberTable:
        line 16: 0
    MethodParameters:
      Name                           Flags
      x$1                            final

  public int hashCode();
    descriptor: ()I
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #76                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #88                 // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
         7: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lrpg/cake/DexNodes$DexTree;
      LineNumberTable:
        line 16: 0

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #76                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #92                 // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lrpg/cake/DexNodes$DexTree;
      LineNumberTable:
        line 16: 0

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=7, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     132
         5: aload_1
         6: astore_3
         7: aload_3
         8: instanceof    #2                  // class rpg/cake/DexNodes$DexTree
        11: ifeq          33
        14: aload_3
        15: checkcast     #2                  // class rpg/cake/DexNodes$DexTree
        18: invokevirtual #35                 // Method rpg$cake$DexNodes$DexTree$$$outer:()Lrpg/cake/Nodes;
        21: aload_0
        22: invokevirtual #35                 // Method rpg$cake$DexNodes$DexTree$$$outer:()Lrpg/cake/Nodes;
        25: if_acmpne     33
        28: iconst_1
        29: istore_2
        30: goto          41
        33: goto          36
        36: iconst_0
        37: istore_2
        38: goto          41
        41: iload_2
        42: ifeq          136
        45: aload_1
        46: checkcast     #2                  // class rpg/cake/DexNodes$DexTree
        49: astore        4
        51: aload_0
        52: invokevirtual #42                 // Method left:()Lrpg/cake/Nodes$Node;
        55: aload         4
        57: invokevirtual #42                 // Method left:()Lrpg/cake/Nodes$Node;
        60: astore        5
        62: dup
        63: ifnonnull     75
        66: pop
        67: aload         5
        69: ifnull        83
        72: goto          128
        75: aload         5
        77: invokevirtual #95                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        80: ifeq          128
        83: aload_0
        84: invokevirtual #45                 // Method right:()Lrpg/cake/Nodes$Node;
        87: aload         4
        89: invokevirtual #45                 // Method right:()Lrpg/cake/Nodes$Node;
        92: astore        6
        94: dup
        95: ifnonnull     107
        98: pop
        99: aload         6
       101: ifnull        115
       104: goto          128
       107: aload         6
       109: invokevirtual #95                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       112: ifeq          128
       115: aload         4
       117: aload_0
       118: invokevirtual #97                 // Method canEqual:(Ljava/lang/Object;)Z
       121: ifeq          128
       124: iconst_1
       125: goto          129
       128: iconst_0
       129: ifeq          136
       132: iconst_1
       133: goto          137
       136: iconst_0
       137: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     138     0  this   Lrpg/cake/DexNodes$DexTree;
            0     138     1   x$1   Ljava/lang/Object;
      LineNumberTable:
        line 16: 0
      StackMapTable: number_of_entries = 12
        frame_type = 253 /* append */
          offset_delta = 33
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class rpg/cake/DexNodes$DexTree, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 33
          locals = [ class rpg/cake/DexNodes$DexTree, class java/lang/Object, int, class java/lang/Object, class rpg/cake/DexNodes$DexTree, class rpg/cake/Nodes$Node ]
          stack = [ class rpg/cake/Nodes$Node ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class rpg/cake/DexNodes$DexTree, class java/lang/Object, int, class java/lang/Object, class rpg/cake/DexNodes$DexTree, class rpg/cake/Nodes$Node, class rpg/cake/Nodes$Node ]
          stack = [ class rpg/cake/Nodes$Node ]
        frame_type = 7 /* same */
        frame_type = 250 /* chop */
          offset_delta = 12
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class rpg/cake/DexNodes$DexTree, class java/lang/Object ]
          stack = []
        frame_type = 253 /* append */
          offset_delta = 3
          locals = [ int, class java/lang/Object ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class rpg/cake/DexNodes$DexTree, class java/lang/Object ]
          stack = [ int ]
    MethodParameters:
      Name                           Flags
      x$1                            final

  public rpg.cake.Nodes rpg$cake$DexNodes$DexTree$$$outer();
    descriptor: ()Lrpg/cake/Nodes;
    flags: ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #99                 // Field $outer:Lrpg/cake/Nodes;
         4: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lrpg/cake/DexNodes$DexTree;
      LineNumberTable:
        line 16: 0

  public rpg.cake.DexNodes$DexTree(rpg.cake.Nodes, rpg.cake.Nodes$Node, rpg.cake.Nodes$Node);
    descriptor: (Lrpg/cake/Nodes;Lrpg/cake/Nodes$Node;Lrpg/cake/Nodes$Node;)V
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: aload_0
         1: aload_2
         2: putfield      #25                 // Field left:Lrpg/cake/Nodes$Node;
         5: aload_0
         6: aload_3
         7: putfield      #29                 // Field right:Lrpg/cake/Nodes$Node;
        10: aload_1
        11: ifnonnull     16
        14: aconst_null
        15: athrow
        16: aload_0
        17: aload_1
        18: putfield      #99                 // Field $outer:Lrpg/cake/Nodes;
        21: aload_0
        22: invokespecial #102                // Method java/lang/Object."<init>":()V
        25: aload_0
        26: invokestatic  #106                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
        29: return
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lrpg/cake/DexNodes$DexTree;
            0      30     1 $outer   Lrpg/cake/Nodes;
            0      30     2  left   Lrpg/cake/Nodes$Node;
            0      30     3 right   Lrpg/cake/Nodes$Node;
      LineNumberTable:
        line 16: 0
      StackMapTable: number_of_entries = 1
        frame_type = 16 /* same */
    MethodParameters:
      Name                           Flags
      $outer                         final
      left                           final
      right                          final
}
SourceFile: "CakeSkillTrees.scala"
InnerClasses:
     public #14= #2 of #13; //DexTree=class rpg/cake/DexNodes$DexTree of class rpg/cake/DexNodes
     public #17= #6 of #16; //Node=class rpg/cake/Nodes$Node of class rpg/cake/Nodes
Error: unknown attribute
  ScalaInlineInfo: length = 0x4F
   01 00 00 0F 00 24 00 25 00 00 51 00 52 00 00 28
   00 17 00 00 2B 00 17 00 00 1E 00 1F 00 00 5D 00
   52 00 00 54 00 32 00 00 12 00 17 00 00 31 00 32
   00 00 33 00 34 00 00 45 00 46 00 00 2E 00 2F 00
   00 14 00 17 00 00 20 00 21 00 00 3E 00 2F 00
Error: unknown attribute
  Scala: length = 0x0

